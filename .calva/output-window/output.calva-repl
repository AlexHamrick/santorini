; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; nREPL Connection was closed
; Starting Jack-in Terminal: cmd.exe /d /c lein update-in :dependencies conj [nrepl,"0.8.3"] -- update-in :plugins conj [cider/cider-nrepl,"0.25.8"] -- update-in [:repl-options,:nrepl-middleware] conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉santorini.core꞉> 
; Jack-in done.
clj꞉santorini.core꞉> 
(main-loop)
{"turn":2,"players":[{"card":"Demeter","tokens":[[3,3],[4,1]]},{"card":"Demeter","tokens":[[4,3],[4,4]]}],"spaces":[[0,0,0,0,0],[0,0,0,0,0],[0,0,0,1,0],[0,1,0,0,0],[0,1,0,0,0]]}
nil
clj꞉santorini.core꞉> 
(main-loop)
{"turn":2,"players":[{"card":"Demeter","tokens":[[3,3],[4,1]]},{"card":"Demeter","tokens":[[4,3],[4,4]]}],"spaces":[[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,1,0]]}
nil
clj꞉santorini.core꞉> 
; Evaluating file: core.clj
#'santorini.core/move-to-json
clj꞉santorini.core꞉> 
(main-loop)
#santorini.utils.Move{:pieces [[[3 2] [3 4]] [[3 3] [4 1]]], :pieceNum 1, :pieceStart [4 4], :startHeight 0, :currentHeight 0, :hasMovedUp false, :builds [#santorini.utils.Build{:pos [3 5], :newHeight 1} #santorini.utils.Build{:pos [2 5], :newHeight 1}], :card Demeter}
{"turn":2,"players":[{"card":"Demeter","tokens":[[3,3],[4,1]]},{"card":"Demeter","tokens":[[3,2],[3,4]]}],"spaces":null}
nil
clj꞉santorini.core꞉> 
(main-loop)
#santorini.utils.Move{:pieces [[[3 2] [5 4]] [[3 3] [4 1]]], :pieceNum 1, :pieceStart [4 4], :startHeight 0, :currentHeight 0, :hasMovedUp false, :builds [#santorini.utils.Build{:pos [5 5], :newHeight 1} #santorini.utils.Build{:pos [4 4], :newHeight 1}], :card Demeter}
{"turn":2,"players":[{"card":"Atlas","tokens":[[3,3],[4,1]]},{"card":"Demeter","tokens":[[3,2],[5,4]]}],"spaces":null}
nil
clj꞉santorini.core꞉> 
(main-loop)
#santorini.utils.Move{:pieces [[[2 2] [4 4]] [[3 3] [4 1]]], :pieceNum 0, :pieceStart [3 2], :startHeight 0, :currentHeight 0, :hasMovedUp false, :builds [#santorini.utils.Build{:pos [1 3], :newHeight 1} #santorini.utils.Build{:pos [2 3], :newHeight 1}], :card Demeter}
{"turn":2,"players":[{"card":"Atlas","tokens":[[3,3],[4,1]]},{"card":"Demeter","tokens":[[2,2],[4,4]]}],"spaces":null}
nil
clj꞉santorini.core꞉> 
; Evaluating file: core.clj
#'santorini.core/move-to-json
clj꞉santorini.core꞉> 
(main-loop)
#santorini.utils.Move{:pieces [[[3 2] [4 3]] [[3 3] [4 1]]], :pieceNum 1, :pieceStart [4 4], :startHeight 0, :currentHeight 0, :hasMovedUp false, :builds [#santorini.utils.Build{:pos [3 4], :newHeight 1} #santorini.utils.Build{:pos [5 4], :newHeight 1}], :card Demeter}
{"turn":2,"players":[{"card":"Atlas","tokens":[[3,3],[4,1]]},{"card":"Demeter","tokens":[[3,2],[4,3]]}],"spaces":[[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,1,0]]}
nil
clj꞉santorini.core꞉> 
; Evaluating file: core.clj
#'santorini.core/move-to-json
clj꞉santorini.core꞉> 
(main-loop)
#santorini.utils.Move{:pieces [[[3 2] [3 5]] [[3 3] [4 1]]], :pieceNum 1, :pieceStart [4 4], :startHeight 0, :currentHeight 0, :hasMovedUp false, :builds [#santorini.utils.Build{:pos [2 4], :newHeight 1} #santorini.utils.Build{:pos [3 4], :newHeight 1}], :card Demeter}
{"turn":2,"players":[{"card":"Atlas","tokens":[[3,3],[4,1]]},{"card":"Demeter","tokens":[[3,2],[3,5]]}],"spaces":[[0,0,0,0,0],[0,0,0,1,0],[0,0,0,1,0],[0,0,0,0,0],[0,0,0,0,0]]}
nil
clj꞉santorini.core꞉> 
; Evaluating file: core.clj
#'santorini.core/move-to-json
clj꞉santorini.core꞉> 
; Evaluating file: core.clj
#'santorini.core/move-to-json
clj꞉santorini.core꞉> 
; Evaluating file: core.clj
#'santorini.core/move-to-json
clj꞉santorini.core꞉> 
; Evaluating file: core.clj
#'santorini.core/move-to-json
clj꞉santorini.core꞉> 
(main-loop)
{"turn":2,"players":[{"card":"Atlas","tokens":[[3,3],[4,1]]},{"card":"Demeter","tokens":[[3,2],[5,3]]}],"spaces":[[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,1,0]]}
nil
clj꞉santorini.core꞉> 
(main-loop)
{"turn":2,"players":[{"card":"Atlas","tokens":[[3,3],[4,1]]},{"card":"Demeter","tokens":[[2,2],[4,4]]}],"spaces":[[0,0,1,0,0],[1,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]]}
nil
clj꞉santorini.core꞉> 
(main-loop)
{"turn":2,"players":[{"card":"Atlas","tokens":[[3,3],[4,1]]},{"card":"Demeter","tokens":[[4,3],[4,4]]}],"spaces":[[0,0,0,0,0],[0,0,0,0,0],[0,1,0,0,0],[0,0,0,0,0],[0,0,0,0,0]]}
nil
clj꞉santorini.core꞉> 
; Evaluating file: core.clj
#'santorini.core/move-to-json
clj꞉santorini.core꞉> 
